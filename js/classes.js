/*
    © Leon Motovskikh, 2017—2021
    leon@motovskikh.ru
*/

"use strict";import{difficulties,modes,states,subclasses,defaultValues}from"./declare.js";import{padZeroes,shuffle}from"./helpers.js";export class MapGame{constructor(name,lang){this.id=0;this.name=name;this.lang=lang;this.regions=[];this.board=[];this.empty={};this.errors={current:0,extra:0,total:0};this.current={index:0,element:null,name:""};this.state=states.loading;this.boxies=null;this.score=0;this.slang={};this.session=0;this.pos={x:0,y:0};this.timeIntervals={hover:null,respect:null}}refresh(){this.current.element=this.board[this.current.index];this.current.name=this.current.element.data("name")}calculateBoxies(){const boxieWidth="calc(100% / "+this.board.length.toString()+")";const top=this.board.length;this.boxies.forEach((boxie,index)=>{boxie.style.width=boxieWidth;boxie.className="boxie";if(index>=top){boxie.classList.add("hidden")}})}start(){for(let i=0;i<this.board.length;i++){let region=this.board[i];region.node.setAttribute("class",region.data("subclass"));let name=region.data("name");if(name in this.empty){this.empty[name].node.setAttribute("class",subclasses.empty)}}this.current.index=0;this.session+=1;this.state=states.started;this.refresh();this.errors.current=0;this.errors.extra=0;this.errors.total=0;this.calculateBoxies();shuffle(this.board)}calculateScore(limitErrors){const divider=limitErrors?(this.board.length-1)*3:this.board.length*3+this.errors.extra;const percentage=Math.floor(this.errors.total/divider*100);this.score=Math.max(0,100-percentage)}getTired(limitErrors){if(limitErrors){this.errors.total+=3*(this.board.length-this.current.index-1)-this.errors.current}else{this.errors.total+=3*(this.board.length-this.current.index)}this.current.index=this.board.length}next(){this.errors.current=0;this.current.index++}refreshTimer(key,func){clearTimeout(this.timeIntervals[key]);this.timeIntervals[key]=setTimeout(func,defaultValues.timeoutMs)}addError(limitErrors){if(this.errors.current<3){this.errors.current++;this.errors.total++;return}if(!limitErrors){this.errors.extra++;this.errors.total++}}addText(key,value){this.slang[key]=value}colourBoxie(i,colour){this.boxies[i].className="boxie";this.boxies[i].classList.add(colour)}setBoard(board){this.board=board}setInitial(boxies,id){this.boxies=boxies;this.id=id}setPos(x,y){this.pos.x=x;this.pos.y=y}setState(state){this.state=state}}export class Settings{constructor(){this.difficulty=difficulties.normal;this.mode=modes.regions;this.lang="";this.colourCorrect=true;this.limitErrors=true;this.showRegionName=true}change(){switch(this.difficulty){case difficulties.normal:this.colourCorrect=true;this.limitErrors=true;this.showRegionName=true;break;case difficulties.hard:this.colourCorrect=true;this.limitErrors=false;this.showRegionName=false;break;case difficulties.extreme:this.colourCorrect=false;this.limitErrors=false;this.showRegionName=false;break;}}setValues(difficulty,lang,mode){this.difficulty=difficulty;this.lang=lang;this.mode=mode}}export class Hymn{constructor(){this.audio=null}play(){if(this.audio===null){return}setTimeout(()=>{if(this.audio.paused){this.audio.play()}},150)}stop(){if(this.audio===null){return}this.audio.pause();this.audio.currentTime=0}setAudio(audio){this.audio=audio}}export class Timer{constructor(element){this.total=0;this.text="";this.interval=null;this.on=true;this.element=element}start(){if(this.on===false){return}this.total=0;this.element.classList.remove("blue");clearInterval(this.interval);this.interval=setInterval(()=>{this.tick()},10)}stop(){clearInterval(this.interval);this.element.classList.add("blue")}tick(){this.total++;const ms=padZeroes(this.total%100,2);const s=padZeroes(Math.floor(this.total%6000/100),2);const m=padZeroes(Math.floor(this.total/6000),2);this.text=m+":"+s+"."+ms;this.element.innerHTML=this.text}setOn(value){this.on=value}}export class Zoom{constructor(){this.rsr=null;this.node=null;this.overlapped=true;this.on=true;this.depth=0;this.depthMax=4;this.dimCurrent={h:0,w:0};this.dimInitial={h:0,w:0};this.dragTime=-1;this.dragAcceleration=4.5;this.posCurrent={x:0,y:0};this.posInitial={x:0,y:0};this.step=0.1}init(rsr,width,height){this.rsr=rsr;this.node=this.rsr.canvas.parentNode;this.dimCurrent.h=height;this.dimInitial.h=height;this.dimCurrent.w=width;this.dimInitial.w=width;this.rsr.setViewBox(0,0,width,height,true)}hit(event){if(this.overlapped||!this.on){return}event.preventDefault();this.dragTime=-1;this.posInitial=this.getRelativePosition(event);this.node.onmousemove=moveEvent=>{this.drag(moveEvent)};this.node.classList.add("dragging")}unleash(event){this.node.classList.remove("dragging");if(this.overlapped||!this.on){return}event.preventDefault();this.node.onmousemove=null}drag(event){if(this.overlapped||!this.on){return}event.preventDefault();const scale=1-this.depth*this.step;const newWidth=this.rsr.width*scale;const newHeight=this.rsr.height*scale;const newPoint=this.getRelativePosition(event);const deltaX=newWidth*(this.posInitial.x-newPoint.x)/this.rsr.width*this.dragAcceleration;const deltaY=newHeight*(this.posInitial.y-newPoint.y)/this.rsr.height*this.dragAcceleration;this.posInitial=newPoint;this.dragTime++;if(this.dragTime%5!==0){return}this.calculate(deltaX,deltaY,scale)}delta(event){if(this.overlapped||!this.on){return}event.preventDefault();const delta=-Math.sign(event.deltaY);this.depth+=delta;if(this.depth>this.depthMax){this.depth=this.depthMax;return}if(this.depth<0){this.depth=0;return}const scale=1-this.depth*this.step;const centerPoint=this.getRelativePosition(event);const deltaX=this.dimInitial.w*this.step*(centerPoint.x/this.dimInitial.w)*delta;const deltaY=this.dimInitial.h*this.step*(centerPoint.y/this.dimInitial.h)*delta;this.calculate(deltaX,deltaY,scale)}calculate(deltaX,deltaY,scale){this.posCurrent.x+=deltaX;this.posCurrent.y+=deltaY;this.dimCurrent={h:this.dimInitial.h*scale,w:this.dimInitial.w*scale};const maxX=this.dimInitial.w-this.dimCurrent.w;if(this.posCurrent.x>=maxX){this.posCurrent.x=maxX}else if(this.posCurrent.x<0){this.posCurrent.x=0}const maxY=this.dimInitial.h-this.dimCurrent.h;if(this.posCurrent.y>=maxY){this.posCurrent.y=maxY}else if(this.posCurrent.y<0){this.posCurrent.y=0}this.setViewBox()}setViewBox(){this.rsr.setViewBox(this.posCurrent.x,this.posCurrent.y,this.dimCurrent.w,this.dimCurrent.h,true)}overlap(num){this.overlapped=num>0}reset(){this.depth=0;this.posCurrent={x:0,y:0};this.dimCurrent.w=this.dimInitial.w;this.dimCurrent.h=this.dimInitial.h;this.setViewBox()}toggle(){this.on=!this.on;if(!this.on){this.reset()}}getRelativePosition(event){let x,y;if(event.pageX||event.pageY){x=event.pageX;y=event.pageY}else{x=event.clientX+document.body.scrollLeft+document.documentElement.scrollLeft;y=event.clientY+document.body.scrollTop+document.documentElement.scrollTop}let pos=this.findPos();x-=pos.x;y-=pos.y;return{x,y}}findPos(){let obj=this.node;let x=obj.offsetLeft;let y=obj.offsetTop;while(obj.offsetParent){if(obj===document.getElementsByTagName("body")[0]){break}x+=obj.offsetParent.offsetLeft;y+=obj.offsetParent.offsetTop;obj=obj.offsetParent}return{x,y}}setDepthMax(depthMax){this.depthMax=depthMax}}export class Sound{constructor(elements){this.on=true;this.elements=elements;this.pack=null;this.sounds={boop:document.createElement("audio"),beep:document.createElement("audio")}}play(sound){if(!this.on){return}if(this.sounds[sound]===undefined){return}this.sounds[sound].play()}refresh(){for(let sound in this.sounds){this.sounds[sound].src=`/sounds/${this.pack}_${sound}.mp3`}}toggle(){this.on=!this.on;for(let element of this.elements){element.checked=this.on}if(this.on){this.play("beep")}}setPack(pack){if(pack===this.pack){return}this.pack=pack;this.refresh()}}
